name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    # services:
    #   sql-server:
    #     image: mcr.microsoft.com/mssql/server:latest
    #     env:
    #       SA_PASSWORD: "5p3ctrum!"
    #       ACCEPT_EULA: "Y"
    #     ports:
    #       - "1433:1433"
    #     volumes:
    #       - ./sql-scripts:/docker-entrypoint-initdb.d
    #     options: --name sql-server
    steps:
      -
        name: Checkout Repository
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and Push SQL Server
        working-directory: ./sql-scripts
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sql-server:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/sql-server:github
      -
        name: Build and Push Email Service
        working-directory: ./ShowcaseRVHub.Email
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/email:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/email:github

      -
        name: Build and Push React App
        working-directory: ./ShowcaseRVHub.React/rv-email-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/react:github

      -
        name: Build and Push Express.js Server
        working-directory: ./ShowcaseRVHub.React/server
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/express:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/express:github

      -
        name: Build and Push WebApi Service
        working-directory: ./ShowcaseRVHub.WebApi
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/webapi:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/webapi:github

      - 
        name: Authenticate with AKS
        uses: azure/aks-set-context@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          cluster-name: showcaseRVHub-cluster
          resource-group: MC_rg-DevOps-Pipelines_showcaseRVHub-cluster_westus2

      -
        name: Deploy to AKS
        run: |
          kubectl config current-context
          kubectl apply -f ./k8s-config/kubeconfig.yaml --server=showcaserv-rg-devops-pipeli-750501-srcaa6ih.hcp.westus2.azmk8s.io