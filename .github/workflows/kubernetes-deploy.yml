name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push SQL Server
        working-directory: ./sql-scripts
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sql-server:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/sql-server:github

      - name: Build and Push Email Service
        working-directory: ./ShowcaseRVHub.Email
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/email:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/email:github

      - name: Build and Push React App
        working-directory: ./ShowcaseRVHub.React/rv-email-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/react:github

      - name: Build and Push Express.js Server
        working-directory: ./ShowcaseRVHub.React/server
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/express:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/express:github

      - name: Build and Push WebApi Service
        working-directory: ./ShowcaseRVHub.WebApi
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/webapi:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/webapi:github
          
      - name: Azure Authentication
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.AZURE_CLIENT_ID }}
            tenant-id: ${{ secrets.AZURE_TENANT_ID }}
            subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
      - name: AKS Credentials
        uses: azure/aks-set-context@v3
        with:
          cluster-name: showcaseRVHub-cluster
          resource-group: rg-DevOps-Pipelines

      - name: Debug Info
        run: |
          kubectl config view
          kubectl cluster-info
        
      - name: Print Kubeconfig
        run: |
          cat $KUBECONFIG

      - name: Debug Networking
        run: |
          ip route
          sudo apt install traceroute
          sudo apt install inetutils-traceroute
          traceroute ${{ secrets.AKS_CLUSTER_ENDPOINT }}   
        
      - name: Deploy to AKS
        run: |          
          kubectl config current-context

          kubectl config set-cluster showcaseRVHub-cluster --server=${{ secrets.AKS_CLUSTER_ENDPOINT }} || exit 1
          kubectl config set-context showcaseRVHub-cluster --cluster=showcaseRVHub-cluster --user=clusterAdmin_rg-DevOps-Pipelines_showcaseRVHub-cluster || exit 1
          kubectl config use-context showcaseRVHub-cluster || exit 1

          kubectl apply --dry-run=client -f ./k8s-config/namespace/*.yaml || exit dry-run
          kubectl apply --dry-run=client -f ./k8s-config/configmaps/*.yaml || exit dry-run
          kubectl apply --dry-run=client -f ./k8s-config/volumes/*.yaml || exit dry-run
          kubectl apply --dry-run=client -f ./k8s-config/deployments/*.yaml || exit dry-run
          kubectl apply --dry-run=client -f ./k8s-config/ingress/*.yaml || exitdry-run
          kubectl apply --dry-run=client -f ./k8s-config/services/*.yaml || exit dry-run
          kubectl apply --dry-run=client -f ./k8s-config/secrets/*.yaml || exit dry-run
          kubectl apply --dry-run=client -f ./k8s-config/kubeconfig.yaml || exit dry-run
          
          kubectl apply -f ./k8s-config/namespace/*.yaml || exit namespace
          kubectl apply -f ./k8s-config/configmaps/*.yaml || exit configmaps
          kubectl apply -f ./k8s-config/volumes/*.yaml || exit volumes
          kubectl apply -f ./k8s-config/secrets/*.yaml || exit secrets
          kubectl apply -f ./k8s-config/deployments/email.deployment.yaml || exit deployment
          kubectl apply -f ./k8s-config/deployments/express.deployment.yaml || exit deployment
          kubectl apply -f ./k8s-config/deployments/react.deployment.yaml || exit deployment
          kubectl apply -f ./k8s-config/deployments/sql-server.deployment.yaml || exit deployment
          kubectl apply -f ./k8s-config/deployments/webapi.deployment.yaml || exit deployment
          kubectl apply -f ./k8s-config/ingress/*.yaml || exit ingress
          kubectl apply -f ./k8s-config/services/webapi.service.yaml || exit service
          kubectl apply -f ./k8s-config/services/react.service.yaml || exit service
          kubectl apply -f ./k8s-config/services/express.service.yaml || exit service
          kubectl apply -f ./k8s-config/services/email.service.yaml || exit service
          
          kubectl apply -f ./k8s-config/kubeconfig.yaml || exit 1