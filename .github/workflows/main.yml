name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      sql-server:
        image: mcr.microsoft.com/mssql/server:latest
        env:
          SA_PASSWORD: "5p3ctrum!"
          ACCEPT_EULA: "Y"
        ports:
          - "1433:1433"
        volumes:
          - ./sql-scripts:/docker-entrypoint-initdb.d
        options: --name sql-server
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and Push SQL Server
        working-directory: ./sql-scripts
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sql-server:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/sql-server:$GITHUB_SHA
      -
        name: Build and Push Email Service
        working-directory: ./ShowcaseRVHub.Email
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/email:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/email:$GITHUB_SHA

      -
        name: Build and Push React App
        working-directory: ./ShowcaseRVHub.React/rv-email-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/react:$GITHUB_SHA

      -
        name: Build and Push Express.js Server
        working-directory: ./ShowcaseRVHub.React/server
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/express:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/express:$GITHUB_SHA

      -
        name: Build and Push WebApi Service
        working-directory: ./ShowcaseRVHub.WebApi
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/webapi:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/webapi:$GITHUB_SHA
      -
        name: Update Kubernetes ConfigMaps
        run: |
          $content = Get-Content -Path 02-configmaps.yaml
          $content = $content -replace 'dockerContainerTag: .*', "dockerContainerTag: $env:GITHUB_SHA"
          $content | Set-Content -Path 02-configmaps.yaml
        shell: pwsh
        working-directory: ./k8s-config
      -
        name: Debug Kubeconfig
        run: cat ./k8s-config/kubeconfig.yaml
      -
        name: List Kubeconfig Contexts
        run: kubectl config get-contexts
      - 
        name: Check Permissions
        run: ls -la ./k8s-config
      -
        name: Set Kubeconfig Context
        run: |
          kubectl config set-cluster showcase-rv-hub-cluster --server=https://127.0.0.1:6443 --certificate-authority=${{ secrets.TLS_CERTIFICATE }}
          kubectl config set-credentials guose79 --client-certificate=${{ secrets.TLS_CERTIFICATE }} --client-key=${{ secrets.TLS_PRIVATE_KEY }}
          kubectl config set-context showcase-rv-hub-dev --cluster=showcase-rv-hub-cluster --user=guose79 --namespace=showcase-rv-hub
          kubectl config use-context showcase-rv-hub-dev
          kubectl config get-contexts
      -
        name: Debug DNS Resolution
        run: cat /etc/resolv.conf
      # -
      #   name: Check Kubernetes Proxy
      #   run: kubectl proxy
      -
        name: Check local DNS Cache
        run: cat /etc/resolv.conf
      -
        name: Cluster Info Dump
        run: |
          cd ${{ github.workspace }}/k8s-config
          kubectl cluster-info dump
        working-directory: ./k8s-config
      -
        name: Get kubectl Cluster-Info
        run: kubectl cluster-info      
      - 
        name: Debug Secrets
        run: |
          echo "TLS_CERTIFICATE: $TLS_CERTIFICATE"
          echo "TLS_PRIVATE_KEY: $TLS_PRIVATE_KEY"
      -
        name: Deploy to Kubernetes
        run: |
          kubectl version
          kubectl apply -k k8s-config
        working-directory: ./k8s-config
        
        env:
          KUBECONFIG: ${{ github.workspace }}/k8s-config/kubeconfig.yaml
          TLS_CERTIFICATE: ${{ secrets.TLS_CERTIFICATE }}
          TLS_PRIVATE_KEY: ${{ secrets.TLS_PRIVATE_KEY }}
      -
        name: Debug Kubeconfig After
        run: kubectl config view