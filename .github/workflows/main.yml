name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      sql-server:
        image: mcr.microsoft.com/mssql/server:latest
        env:
          SA_PASSWORD: "5p3ctrum!"
          ACCEPT_EULA: "Y"
        ports:
          - "1433:1433"
        volumes:
          - ./sql-scripts:/docker-entrypoint-initdb.d
        options: --name sql-server
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and Push SQL Server
        working-directory: ./sql-scripts
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sql-server:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/sql-server:$GITHUB_SHA
      -
        name: Build and Push Email Service
        working-directory: ./ShowcaseRVHub.Email
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/email:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/email:$GITHUB_SHA

      -
        name: Build and Push React App
        working-directory: ./ShowcaseRVHub.React/rv-email-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/react:$GITHUB_SHA

      -
        name: Build and Push Express.js Server
        working-directory: ./ShowcaseRVHub.React/server
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/express:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/express:$GITHUB_SHA

      -
        name: Build and Push WebApi Service
        working-directory: ./ShowcaseRVHub.WebApi
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/webapi:$GITHUB_SHA .
          docker push ${{ secrets.DOCKER_USERNAME }}/webapi:$GITHUB_SHA
      -
        name: Update Kubernetes ConfigMaps
        run: |
          $content = Get-Content -Path 02-configmaps.yaml
          $content = $content -replace 'dockerContainerTag: .*', "dockerContainerTag: $env:GITHUB_SHA"
          $content | Set-Content -Path 02-configmaps.yaml
        shell: pwsh
        working-directory: ./k8s-config
      -
        name: Deploy to Kubernetes
        run: |
          kubectl version
          kubectl apply -k k8s-config
        working-directory: ./
        
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }} # This is where I need help setting this up to use properly. I have no idea what needs to go in the secret