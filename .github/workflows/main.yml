name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      sql-server:
        image: mcr.microsoft.com/mssql/server:latest
        env:
          SA_PASSWORD: "5p3ctrum!"
          ACCEPT_EULA: "Y"
        ports:
          - "1433:1433"
        volumes:
          - ./sql-scripts:/docker-entrypoint-initdb.d
        options: --name sql-server
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and Push SQL Server
        working-directory: ./sql-scripts
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/sql-server:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/sql-server:github
      -
        name: Build and Push Email Service
        working-directory: ./ShowcaseRVHub.Email
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/email:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/email:github

      -
        name: Build and Push React App
        working-directory: ./ShowcaseRVHub.React/rv-email-service
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/react:github

      -
        name: Build and Push Express.js Server
        working-directory: ./ShowcaseRVHub.React/server
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/express:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/express:github

      -
        name: Build and Push WebApi Service
        working-directory: ./ShowcaseRVHub.WebApi
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/webapi:github .
          docker push ${{ secrets.DOCKER_USERNAME }}/webapi:github

      - 
        name: Set up kubectl
        uses: azure/k8s-set-context@v1
        with:
          kubeconfig: ${{ secrets.KUBECONFIG }}
      -
        name: Deploy to Kubernetes
        run: |
          kubectl config use-context minikube
          kubectl version
          kubectl apply -k k8s-config
        working-directory: ./k8s-config
        
        env:
          KUBECONFIG: ${{ github.workspace }}/k8s-config/kubeconfig.yaml
          TLS_CERTIFICATE: ${{ secrets.TLS_CERTIFICATE }}
          TLS_PRIVATE_KEY: ${{ secrets.TLS_PRIVATE_KEY }}
      -
        name: Debug Kubeconfig After
        run: kubectl config --kubeconfig=./k8s-config/kubeconfig.yaml view