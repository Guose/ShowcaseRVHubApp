name: CI/CD Pipeline

on:
  push:
    branches:
    - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
    - name: Azure Authentication
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: AKS Credentials
      uses: azure/aks-set-context@v3
      with:
        cluster-name: showcaseRVHub-cluster
        resource-group: rg-DevOps-Pipelines

    - name: Download kubectl
      run: |
        curl -LO "https://storage.googleapis.com/kubernetes-release/release/v1.27.7/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Debug Info
      run: |
        kubectl config view --kubeconfig=$KUBECONFIG
        kubectl version --client
        kubectl cluster-info --kubeconfig=$KUBECONFIG

    - name: Print Kubeconfig
      run: |
        cat $KUBECONFIG

    - name: Debug Networking
      run: "ip route\nsudo apt install traceroute\nsudo apt install inetutils-traceroute\ntraceroute ${{ secrets.AKS_CLUSTER_ENDPOINT }}   \n#magic___^_^___line\n"
    - name: Deploy to AKS
      run: |
        minikube start --kubernetes-version=v1.27.7
        kubectl config current-context
        kubectl version --client
        kubectl config set-cluster showcaseRVHub-cluster --server=${{ secrets.AKS_CLUSTER_ENDPOINT }} --kubeconfig=$KUBECONFIG || exit 1
        kubectl config set-context showcaseRVHub-cluster --cluster=showcaseRVHub-cluster --user=clusterAdmin_rg-DevOps-Pipelines_showcaseRVHub-cluster --kubeconfig=$KUBECONFIG || exit 1
        kubectl config use-context showcaseRVHub-cluster || exit 1

        kubectl apply -f ./k8s-config/namespace/namespace.yaml --kubeconfig=$KUBECONFIG || exit 51
        kubectl apply -f ./k8s-config/configmaps/configmaps.yaml --kubeconfig=$KUBECONFIG || exit 2
        kubectl apply -f ./k8s-config/volumes/sql-server-persistent-volume.yaml --kubeconfig=$KUBECONFIG || exit 3
        kubectl apply -f ./k8s-config/secrets/secrets.yaml --kubeconfig=$KUBECONFIG || exit 4
        kubectl apply -f ./k8s-config/secrets/tls-secret.yaml --kubeconfig=$KUBECONFIG || exit 4
        kubectl apply -f ./k8s-config/deployments/email.deployment.yaml --kubeconfig=$KUBECONFIG || exit 5
        kubectl apply -f ./k8s-config/deployments/express.deployment.yaml --kubeconfig=$KUBECONFIG || exit 6
        kubectl apply -f ./k8s-config/deployments/react.deployment.yaml --kubeconfig=$KUBECONFIG || exit 7
        kubectl apply -f ./k8s-config/deployments/sql-server.deployment.yaml --kubeconfig=$KUBECONFIG || exit 8
        kubectl apply -f ./k8s-config/deployments/webapi.deployment.yaml --kubeconfig=$KUBECONFIG || exit 9
        kubectl apply -f ./k8s-config/ingress/ingress.yaml --kubeconfig=$KUBECONFIG || exit 10
        kubectl apply -f ./k8s-config/services/webapi.service.yaml --kubeconfig=$KUBECONFIG || exit 11
        kubectl apply -f ./k8s-config/services/react.service.yaml --kubeconfig=$KUBECONFIG || exit 12
        kubectl apply -f ./k8s-config/services/express.service.yaml --kubeconfig=$KUBECONFIG || exit 13
        kubectl apply -f ./k8s-config/services/email.service.yaml --kubeconfig=$KUBECONFIG || exit 14

        kubectl apply -f ./k8s-config/kubeconfig.yaml --kubeconfig=$KUBECONFIG || exit 31
